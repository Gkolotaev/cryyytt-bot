import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
API_TOKEN = os.getenv("BOT_TOKEN")
OWNER_ID = int(os.getenv("OWNER_ID"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–ø–∏—Å–∞—Ç—å @thecreator01"
keyboard = InlineKeyboardMarkup().add(
    InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å @thecreator01", url="https://t.me/thecreator01")
)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    user = message.from_user
    name = user.full_name
    username = f"@{user.username}" if user.username else "‚Äî"
    user_id = user.id

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É
    await bot.send_message(
        OWNER_ID,
        f"üì• –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç:\nüë§ {name}\nüîó {username}\nüÜî {user_id}"
    )

    # –û—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –∫—Ä–∏–ø—Ç—É? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëáüèª",
        reply_markup=keyboard
    )

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
